# Interactive graph

<style>
  * {
    font-family: sans-serif;
  }
  
  /* Add some styling for the button */
  #toggleTheater {
    margin: 10px;
    padding: 10px;
    font-size: 16px;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
  }

  #toggleTheater:hover {
    background-color: #45a049;
  }
  
</style> 

<div id="plot">
</div>

<!-- Button to toggle the theater data -->
<button id="toggleTheater">Toggle Theater Data</button>

<script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
<script src="scripts/myscript.js"></script>


<script>
  // Sample data
  const data = [
    { year: 2020, theater: 'Theater A', capacity: 500, attendance: 450 },
    { year: 2020, theater: 'Theater B', capacity: 600, attendance: 580 },
    { year: 2021, theater: 'Theater A', capacity: 550, attendance: 500 },
    { year: 2021, theater: 'Theater B', capacity: 650, attendance: 620 },
  ];

  let currentData = data;

  // Function to create the chart
  function createChart(data) {
    const width = 600, height = 400;

    // Remove any previous chart
    d3.select("#plot").selectAll("*").remove();

    const svg = d3.select("#plot").append("svg")
      .attr("width", width)
      .attr("height", height);

    const x = d3.scaleBand()
      .domain(data.map(d => d.year))
      .range([0, width])
      .padding(0.1);

    const y = d3.scaleLinear()
      .domain([0, d3.max(data, d => d.capacity)])
      .range([height, 0]);

    const color = d3.scaleOrdinal()
      .domain(['capacity', 'attendance'])
      .range(["steelblue", "orange"]);

    const stack = d3.stack()
      .keys(['capacity', 'attendance']);

    const series = stack(data);

    svg.selectAll(".serie")
      .data(series)
      .enter().append("g")
      .attr("class", "serie")
      .style("fill", d => color(d.key))
      .selectAll("rect")
      .data(d => d)
      .enter().append("rect")
      .attr("x", d => x(d.data.year))
      .attr("y", d => y(d[1]))
      .attr("height", d => y(d[0]) - y(d[1]))
      .attr("width", x.bandwidth());

    svg.append("g")
      .selectAll(".x-axis")
      .data([0])
      .enter().append("g")
      .attr("transform", `translate(0,${height})`)
      .call(d3.axisBottom(x));

    svg.append("g")
      .selectAll(".y-axis")
      .data([0])
      .enter().append("g")
      .call(d3.axisLeft(y));
  }

  // Create initial chart
  createChart(currentData);

  // Button event to toggle theater data
  d3.select("#toggleTheater").on("click", function() {
    // Toggle data to only show "Theater A" or both theaters
    currentData = currentData.length > 2 ? data.filter(d => d.theater === "Theater A") : data;
    createChart(currentData);
  });
</script>