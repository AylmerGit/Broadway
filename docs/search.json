[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Broadway",
    "section": "",
    "text": "1 Introduction\nThe Broadway industry is a cornerstone of live entertainment, renowned for its artistic performances and creative experience. The industry has continually adapted and evolved in response to a changing world. Through this exploratory data analysis project, we hope to better understand the financial trends of plays, musicals, and other live shows playing on Broadway. In particular, we are interested in seeing the difference in financial performance of musicals compared to plays and other show types, the timeline of certain productions and how their length and other factors are impacted by gross revenue over time, the number of shows on a weekly basis, and more, as well as how the venue impacts sales and other factors. That being said, our analysis will not necessarily be confined to the aforementioned questions, as we fully plan to explore to the best of our ability any other burning questions that pop up during our analysis of the data (perhaps questions regarding revivals [shows that have been staged before, but are being re-staged and reshown by a different production and creative team] and the impact of Tony Awards on sales and longevity [data not found in the datasets we are considering using, but is readily available online and can be manually collected with citations if it is deemed important]).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe columns of our data are:  Day: Day of the Month when the Show ended for that week, e.g. 12 means that for that week the last show was on the 12 day of the Month Date Full: MM/DD/YYYY format of the Date Month: Month of the Year for the Show Year: Year for the Show Show Name: Name of the Show/Production Show Theatre: Name of the Theatre where the show was played Show Type: Musical, Play, Special Statistics Attendance: Total number of people who attended during that week Statistics.Capacity: The percentage of the Theatre that was filled during that week Statistics.Gross: The total amount, in dollars, the Show made for the week Statistics.Gross Potential: This is a percentage of gross total made in the week(Statistics.Gross) over the possible/feasible total for the same week. In the this column the author of the dataset already converted all the NAs into 0. Statistics.Performances: Number of performances that occured during that week\nTo get a quick idea of the data, here is the summary of each column\nCode\n#|fig.width=10\n#|fig.height=10\nkable(summary(BroadwayData))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDate.Day\nDate.Full\nDate.Month\nDate.Year\nShow.Name\nShow.Theatre\nShow.Type\nStatistics.Attendance\nStatistics.Capacity\nStatistics.Gross\nStatistics.Gross Potential\nStatistics.Performances\n\n\n\n\n\nMin. : 1.00\nLength:31296\nMin. : 1.000\nMin. :1990\nLength:31296\nLength:31296\nLength:31296\nMin. : 24\nMin. : 10.00\nMin. : 1037\nMin. : 0.0\nMin. : 0.000\n\n\n\n1st Qu.: 8.00\nClass :character\n1st Qu.: 4.000\n1st Qu.:2001\nClass :character\nClass :character\nClass :character\n1st Qu.: 5508\n1st Qu.: 70.00\n1st Qu.: 320108\n1st Qu.: 45.0\n1st Qu.: 8.000\n\n\n\nMedian :16.00\nMode :character\nMedian : 6.000\nMedian :2006\nMode :character\nMode :character\nMode :character\nMedian : 7802\nMedian : 83.00\nMedian : 514520\nMedian : 63.0\nMedian : 8.000\n\n\n\nMean :15.72\nNA\nMean : 6.509\nMean :2006\nNA\nNA\nNA\nMean : 8011\nMean : 80.74\nMean : 596069\nMean : 62.4\nMean : 7.225\n\n\n\n3rd Qu.:23.00\nNA\n3rd Qu.:10.000\n3rd Qu.:2011\nNA\nNA\nNA\n3rd Qu.:10348\n3rd Qu.: 95.00\n3rd Qu.: 785269\n3rd Qu.: 82.0\n3rd Qu.: 8.000\n\n\n\nMax. :31.00\nNA\nMax. :12.000\nMax. :2016\nNA\nNA\nNA\nMax. :21631\nMax. :892.00\nMax. :3201333\nMax. :226.0\nMax. :16.000",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nUpon manual inspection, there does not appear to be any formally “missing” values in the broadway.csv data set; however, the description of the data set by the compiler of the set itself mentions that any rows for which the “gross potential” could not be found or calculated had its “gross potential” value set to 0 as default. Barring extreme outliers such as weeks with 0 ticket sales, which we are under the impression is impossible, the 0 value should be unique to such rows with the absent value. Thus, we should be able to treat the data set as if all ‘na’ values were housed in the “gross potential” row and were replaced by 0.\n\n\nCode\n#|fig.width=15\n#|fig.height=30\n\nmissingval &lt;- BroadwayData\nmissingval$`Statistics.Gross Potential`[missingval$`Statistics.Gross Potential` == 0] &lt;- NA\n\ndf_missing &lt;- missingval |&gt; \n  mutate(across(-Date.Year, ~ ifelse(is.na(.), 1, 0)))\n\ndf_missing &lt;- df_missing |&gt; clean_names()\n\ndf_summary &lt;- df_missing |&gt; \n  group_by(date_year) |&gt; \n  summarize(across(everything(), mean))\n\ndf_long &lt;- df_summary |&gt; \n  pivot_longer(cols = -date_year, names_to = \"Variable\", values_to = \"MissingProportion\")\n\nggplot(df_long, aes(x = Variable, y = as.factor(date_year), fill = MissingProportion)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"red\") +  # Adjust colors as needed\n  theme_minimal() +\n  labs(title = \"Missing Values Heatmap\",\n       x = \"Variable\",\n       y = \"Year\",\n       fill = \"Missing Proportion\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nAs we can see most of the missing data comes from the earlier years of the dataset. Our guess is that they did not have as good of a way to track this data, perhaps some was lost or simply not calculated for those weeks.\n\n\nCode\nmissing_data &lt;- data.frame(\n  Variable = df_summary$date_year,\n  MissingProportion = (df_summary$statistics_gross_potential)\n)\nggplot(missing_data, aes(x = Variable, y = MissingProportion)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Proportion of Missing Values\", x = \"Year\", y = \"Missing Proportion\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nHere is a more detailed look into the Gross Potenital Column and the proportion that were missing from the data set. We can clearly see that in the early years the Gross Potential might have not been tracked.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
<<<<<<< HEAD
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Toggle Theater Data",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
=======
>>>>>>> d47d20898f1831cee7241757002b89daae5d1ccd
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
<<<<<<< HEAD
    "text": "Code\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(ggplot2))\nsuppressMessages(library(knitr))\nsuppressMessages(suppressWarnings(library(janitor)))\nsuppressMessages(library(scales))\nBroadwayData &lt;- read_csv(\"Raw_Data/broadway.csv\", show_col_types = FALSE)\ncolnames(BroadwayData) &lt;- c(\"Day\", \"Date\", \"Month\",\"Year\",\"Show_Name\",\"Show_Theatre\",\"Show_Type\",\"Attendance\",\"Capacity\",\"Gross\",\"Gross_Potential\",\"Performances\")\n\n\n\nLinear graph of Attendance vs Gross or gross potential (Cooper)\nDo the above, but faceted by show.type (Cooper)\nGross by Month and/or year (Cooper) - Test out combinations (facet by year?)\nfacet again by show.type (Cooper)\nAttendance by year and/or month (Aylmer)\n\n\n\nCode\nattendance_by_year &lt;- BroadwayData |&gt; \n  group_by(Year) |&gt; \n  summarize(total_attendance = sum(Attendance), .groups = \"drop\")\n\nggplot(attendance_by_year, aes(x = Year, y = total_attendance)) +\n  geom_col(fill = \"skyblue\") +\n  labs(title = \"Total Attendance by Year\", x = \"Year\", y = \"Total Attendance Count\")+\n  scale_y_continuous(labels = label_number(big.mark = \",\"),\n                     breaks = seq(0, max(attendance_by_year$total_attendance), by = 2500000))\n\n\n\n\n\n\n\n\n\n\n\nCode\nattendance_by_month &lt;- BroadwayData |&gt; \n  group_by(Month) |&gt; \n  summarize(avg_attendance = mean(Attendance), .groups = \"drop\")\n\nattendance_by_month$Month &lt;- month.abb[attendance_by_month$Month]\nattendance_by_month$Month &lt;- factor(attendance_by_month$Month, levels = month.abb)\n\nggplot(attendance_by_month, aes(x = Month, y = avg_attendance)) +\n  geom_col(fill = \"skyblue\") +\n  labs(title = \"Average Attendance by Month\", x = \"Month\", y = \"Average Attendance Count\")+\n  scale_y_continuous(labels = label_number(big.mark = \",\"),\n                     breaks = seq(6000, 10000, by = 500))+\n  coord_cartesian(ylim = c(7000, 9000))\n\n\n\n\n\n\n\n\n\n\nswap 3 and 4’s faceting of show type and month (i.e facet by month, plot the 3 show types) (Cooper)\nStacked bar chart attendance & capacity vs year Exclude (Aylmer)\nStacked bar chart attendance & capacity for each theatre (Aylmer)\nInteractive idea for now: 1) show some trend year by year (animation or selection tool) or 2) Put together an interactive predictor",
=======
    "text": "Code\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(ggplot2))\nsuppressMessages(library(knitr))\nsuppressMessages(suppressWarnings(library(janitor)))\nsuppressMessages(library(scales))\nsuppressMessages(library(lubridate))\n\nBroadwayData &lt;- read_csv(\"Raw_Data/broadway.csv\", show_col_types = FALSE)\n#Cooper used different column names:\nwork_broadway &lt;- data.frame(BroadwayData)\n\ncolnames(BroadwayData) &lt;- c(\"Day\", \"Date\", \"Month\",\"Year\",\"Show_Name\",\"Show_Theatre\",\"Show_Type\",\"Attendance\",\"Capacity\",\"Gross\",\"Gross_Potential\",\"Performances\")\n\n\nBefore taking a look at the shows themselves, we wanted to get an idea of what theatres have historically made the most gross revenue, as we figured this information could inform our analysis later on.\nCleveland Dot plot of total gross outcomes for different Broadway theatres:\n\n\nCode\ntotal_theatre_data &lt;- work_broadway |&gt;\n  group_by(Show.Theatre) |&gt;\n  summarise(Total.Gross = sum(Statistics.Gross, na.rm = TRUE)) |&gt;\n  arrange(desc(Total.Gross))\n\n# Create Cleveland dot plot\nggplot(total_theatre_data, aes(x = Total.Gross, y = reorder(Show.Theatre, Total.Gross))) +\n  geom_point(size = 2.5, color = \"steelblue\") +  # The dots\n  labs(title = \"Total Gross Earnings by Theatre from 1990 to 2016 (in 100s of Millions)\",\n       x = \"Total Gross ($ in Hundred-Millions)\",\n       y = \"Theatre Name\") +\n  scale_x_continuous(labels = label_number(scale = 1e-8, accuracy = 0.1),\n                     breaks = seq(0, max(total_theatre_data$Total.Gross) + 100000000, by = 1e8)) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 5.6),\n        axis.text.x = element_text(size = 10))\n\n\n\n\n\n\n\n\n\nSo then, we decided to take a look at the shows’ gross revenue throughout their runs over time, and see which shows grossed the most from 1990 to 2016. And to connect this data to the graph above, we decided to color the points by the theatre that the shows began in. As we will see shortly, this was a naive approach to coloring, as it gives some information, but leaves out other info.\nCleveland Dot Plot of the top grossing Broadway shows from 1990 to 2016, colored by the theatre they started in.\n\n\nCode\ntotal_gross_data &lt;- work_broadway |&gt;\n  group_by(Show.Name) |&gt;\n  summarise(Total.Gross = sum(Statistics.Gross, na.rm = TRUE),\n            Show.Theatre = first(Show.Theatre)) |&gt;\n  arrange(desc(Total.Gross)) |&gt;\n  ungroup() |&gt;\n  slice_head(n = 40)\n\n# Create Cleveland dot plot with color by Show.Theatre\nggplot(total_gross_data, aes(x = Total.Gross, y = reorder(Show.Name, Total.Gross), color = Show.Theatre)) +\n  geom_point(size = 3) +\n  labs(title = \"Top 40 Grossing Broadway Shows: 1990-2016\",\n       x = \"Total Gross ($ in Hundred-Millions)\",\n       y = \"Show Name\") +\n  scale_x_continuous(labels = label_number(scale = 1e-8, accuracy = 0.1),\n                     breaks = seq(0, max(total_gross_data$Total.Gross) + 100000000, by = 1e8)) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 7),  # Adjust the text size of show names\n        axis.text.x = element_text(size = 9),  # Adjust the text size of x-axis labels\n        plot.margin = margin(10, 10, 10, 20),  # Add some margin to prevent labels from being cut off\n        plot.title = element_text(size = 14, hjust = 0.5)) +\n  guides(color = guide_legend(title = \"Initial Theatre\",\n         keywidth = 0.5,      # Shrink the width of the key (the colored box)\n         keyheight = 0.6,\n         label.position = \"right\",\n         ncol = 1))\n\n\n\n\n\n\n\n\n\nThe graph above does give interesting insight into the top 40 highest grossing Broadway shows during the period the data set ranges from (1990 to 2016), with there being just a few shows that grossed 400 million dollars during the run, and the rest grossing less than that. However, something seemed fishy when looking at the gross amounts in conjuction with the theatres that we colored by.\nThe theatres represented above don’t seem to line-up with the top grossing theatres in the theatres-solo cleveland dot plot–for example, Lion King grossed over a billion dollars in its run up to 2016, and began in the New Amsterdam Theatre, but the New Amsterdam Theatre didn’t gross above a billion dollars in this same time frame. This fact lead me to consider why this is the case, and the only reasonable answer we could come up with is that these shows either had revivals at a different location (eg. ended one production in one theatre and began another in another), or transferred productions to a different location during its run (eg. one production from one theatre to another).\nSo, we added another column to the data set which essentially faceted the gross earnings of the shows by their theatres. We added the theatres as colors, and as part of the y labeles as we felt this, while technically redundant coloring, helped to read the graph a bit easier.\nCleveland Dot plot of total gross outcomes for different shows, separating by the different theatres they were in (as some shows could have moved location, or had revivals). (top 40):\n\n\nCode\n# Create a new column combining Show.Name and Show.Theatre\nwork_broadway &lt;- work_broadway |&gt;\n  mutate(ShowTheatreCombo = paste(Show.Name, \" (\", Show.Theatre, \")\", sep = \"\"))\n\n# Group by Show.Name and Show.Theatre, then summarize the total gross for each combination\nshow_theatre_gross &lt;- work_broadway |&gt;\n  group_by(ShowTheatreCombo, Show.Theatre) |&gt;\n  summarise(Total.Gross = sum(Statistics.Gross, na.rm = TRUE)) |&gt;\n  arrange(desc(Total.Gross)) |&gt;\n  ungroup() |&gt;\n  slice_head(n = 40)\n\n\n`summarise()` has grouped output by 'ShowTheatreCombo'. You can override using\nthe `.groups` argument.\n\n\nCode\n# Had to refactor because it was out of order when I incorporated the new column\nshow_theatre_gross$ShowTheatreCombo &lt;- factor(show_theatre_gross$ShowTheatreCombo, \n                                              levels = show_theatre_gross$ShowTheatreCombo[order(show_theatre_gross$Total.Gross, decreasing = FALSE)])\n\n\n# Create Cleveland dot plot\nggplot(show_theatre_gross, aes(x = Total.Gross, y = ShowTheatreCombo, color = Show.Theatre)) +\n  geom_point(size = 2.5) +\n  labs(title = \"Top 40 Grossing Show/Theatre runs, 1990-2016\",\n       x = \"Total Gross ($ in Hundred-Millions)\",\n       y = \"Show Name\") +\n  scale_x_continuous(labels = label_number(scale = 1e-8, accuracy = 0.1),\n                     breaks = seq(0, max(show_theatre_gross$Total.Gross) + 100000000, by = 1e8)) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 7),\n        axis.text.x = element_text(size = 9)) +\n  guides(color = guide_legend(title = \"Theatre\",\n         keywidth = 0.5,      # Shrink the width of the key (the colored box)\n         keyheight = 0.6,\n         label.position = \"right\",\n         ncol = 1))\n\n\n\n\n\n\n\n\n\nNow here we can see that some shows had sizeable stints in more than one venue (the Lion King, in particular), thus contributing to the inconsistencies in the last plot and the initial theatre gross plot. We also see a few theatres here that weren’t included in the original top 40 list, such as the August Wilson Theatre, where Jersey boys transferred to after previews elsewhere.\nMoving onto the next portion of the data we wanted to explore, we decided to take a look at the relationship between attendance and gross revenue. We did this to ground ourselves in a relationship that we suspected was pretty easy to infer based off of common knowledge alone; however, as you will see, we had reason to explore this further after taking a look at the graph.\nLinear relationship between weekly gross & weekly attendance?\n\n\nCode\nggplot(work_broadway, aes(x = Statistics.Attendance, y = Statistics.Gross)) +\n  geom_point(size = 1, alpha = 0.3) + \n  geom_smooth(method = \"lm\", se = TRUE, color = \"red\", linetype = \"solid\") +  # Linear regression line\n  labs(title = \"Weekly Gross vs. Weekly Attendance\",\n       x = \"Attendance (in thousands)\",\n       y = \"Gross ($ in Millions)\") +\n  scale_y_continuous(labels = label_number(scale = 1e-6, accuracy = 0.1),\n                     breaks = seq(0, max(work_broadway$Statistics.Gross) + 500000, by = 5e5)) +\n  scale_x_continuous(labels = label_number(scale = 1e-3, accuracy = 0.1),\n                     breaks = seq(0, max(work_broadway$Statistics.Attendance) + 5000, by = 2.5e3)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    plot.title = element_text(size = 14, hjust = 0)\n  )\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nHere, we see sort of what we would expect - there is a fairly reasonably linear correlation between weekly gross and weekly attendance. As more people attend, more tickets would be sold, and hence we would expect a higher grossing amount. However, we also see interesting data patterns in the gross vs attendance plot. Most notably to us are the vertical lines visible ad a few different places on the graph (ex. the 8.75k mark). We suspect these represent theatres with shows that consistently got to the point of selling out, thus inducing scarcity in their tickets, allowing the ticket prices to be more variable as demand increased or decreased. Thus, the attendance would remain near full, but the gross could increase (or decrease) due to increased demand for the limited tickets inducing ticket price increases.\nWe also considered the very real possibility of inflation’s effect on the ticket prices causing these vertical lines. For example, a show that was running throughout nearly the entirety of the time range of 1990 to 2016 (eg. the Phantom of the Opera) could see a real difference in ticket prices even if left at approximately constant demand due to the dollar in 1990 being worth more than the dollar in 2016, and the variations between.\nWith that all being said, we decided to further explore the linearity of the relationship to see how strong it is, just for fun.\n\n\nCode\n# Perform linear regression\nlm_model &lt;- lm(Statistics.Gross ~ Statistics.Attendance, data = work_broadway)\n\n# Show the summary of the linear regression model\nsummary(lm_model)\n\n\n\nCall:\nlm(formula = Statistics.Gross ~ Statistics.Attendance, data = work_broadway)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-709562 -136441  -17838   82082 1726908 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           -1.571e+05  3.589e+03  -43.78   &lt;2e-16 ***\nStatistics.Attendance  9.403e+01  4.163e-01  225.87   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 234900 on 31294 degrees of freedom\nMultiple R-squared:  0.6198,    Adjusted R-squared:  0.6198 \nF-statistic: 5.102e+04 on 1 and 31294 DF,  p-value: &lt; 2.2e-16\n\n\nHere, we see that the relationship is very significant, with an incredibly small p value (likely due to the sheer size of the sample itself), and is of moderate strength, with R^2 value of just under 0.62.\nLinearity detour aside, let’s take a look back at the vertical line phenomenon described before. We wanted to get a better insight into what types of shows would result in such gross variations at approximately constant attendance. So, we faceted the graph by show type.\nThe same as above, but faceted on show type:\n\n\nCode\nggplot(work_broadway, aes(x = Statistics.Attendance, y = Statistics.Gross)) +\n  geom_point(size = 1, alpha = 0.3) + \n  geom_smooth(method = \"lm\", se = TRUE, color = \"red\", linetype = \"solid\") +  # Linear regression line\n  labs(title = \"Weekly Gross vs. Weekly Attendance by Show Type\",\n       x = \"Attendance (in thousands)\",\n       y = \"Gross ($ in Millions)\") +\n  scale_y_continuous(labels = label_number(scale = 1e-6, accuracy = 0.1),\n                     breaks = seq(0, max(work_broadway$Statistics.Gross) + 500000, by = 5e5)) +\n  scale_x_continuous(labels = label_number(scale = 1e-3, accuracy = 0.1),\n                     breaks = seq(0, max(work_broadway$Statistics.Attendance) + 5000, by = 5e3)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    plot.title = element_text(size = 14, hjust = 0)\n  ) +\n  facet_wrap(~ Show.Type, scales = \"free\")\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nAs you can see, the phenomenon is still very strongly present for the musicals, whereas it is barely present for the plays, and imperceptible (if present at all) for the specials. This seems to make sense given the generally accepted idea that musicals, when successful, tend to have greater longevity and an easier time advertising themselves compared to successful plays. We also see that attendance seems limited somewhat for plays compared to Musicals and Specials, so the venues themselves are likely different for the different types of shows. However, this further got us thinking: what have the gross trends of musicals vs plays vs specials look like in aggregate over time? Do musicals really seem to make more on the whole?\nSo, we first took a look at the gross trends over time on Broadway in general to get our footing.\n\n\nCode\nwork_broadway$Date.Full &lt;- mdy(work_broadway$Date.Full)\n\n# Group by the Date.Full column (which already represents the start of each week)\nweekly_gross &lt;- work_broadway |&gt;\n  group_by(Date.Full) |&gt;\n  summarise(Total.Gross = sum(Statistics.Gross, na.rm = TRUE)) |&gt;\n  ungroup()\n\n# Create the time series plot\nggplot(weekly_gross, aes(x = Date.Full, y = Total.Gross)) +\n  geom_line(color = \"blue\") +  # Line plot for total gross over time\n  labs(title = \"Total Broadway Gross per Week\",\n       x = \"Time (Collected Weekly)\",\n       y = \"Total Gross amount ($ in Millions)\") +\n  scale_x_date(date_labels = \"%b %d, %Y\", date_breaks = \"1 year\") + # Format x-axis with readable date labels\n  scale_y_continuous(labels = scales::label_number(scale = 1e-6)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability\n        axis.text.y = element_text(size = 10),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        plot.title = element_text(size = 14, hjust = 0.5),\n        panel.grid.major.x = element_line(color = \"lightgray\", size = 0.5),\n        panel.grid.minor.x = element_line(color = \"gray\", linetype = \"dotted\", size = 0.25)\n        )\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\n\n\nBefore exploring the question we set out to answer, let’s discuss the time series trends on the whole first. Here, we see pretty clear booms most years during the winter holidays, and bumps during the summertime and mid spring (potentially lining up with summer breaks and spring breaks for students, respecively?). We also see impacts of notable historic events in NYC on this chart, such as all Broadway theatres shutting down from September 11th to the 13th in 2001 due to the 9/11 terrorist attacks on the world trade center & a commensurate drop in gross revenue that week shown above (among other events).\nBut back to the question: have musicals, plays, or specials historically made more money on Broadway? To answer this, we again just faceted by show type, and plotted the same time series.\n\n\nCode\nweekly_gross_type &lt;- work_broadway |&gt;\n  group_by(Date.Full, Show.Type) |&gt;\n  summarise(Total.Gross = sum(Statistics.Gross, na.rm = TRUE)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'Date.Full'. You can override using the\n`.groups` argument.\n\n\nCode\n# Create the time series plot and facet by Show.Type\nggplot(weekly_gross_type, aes(x = Date.Full, y = Total.Gross)) +\n  geom_line(color = \"blue\") +  # Line plot for total gross over time\n  labs(title = \"Total Broadway Gross per Week\",\n       x = \"Time (Collected Weekly)\",\n       y = \"Total Gross amount ($ in Millions)\") +\n  scale_x_date(date_labels = \"%b %d, %Y\", date_breaks = \"1 year\") + # Format x-axis with readable date labels\n  scale_y_continuous(labels = scales::label_number(scale = 1e-6)) +  # Scale y-axis to millions\n  facet_wrap(~ Show.Type, scales = \"free_y\", ncol = 1) +  # Facet by Show.Type\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability\n        axis.text.y = element_text(size = 10),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        plot.title = element_text(size = 14, hjust = 0.5),\n        panel.grid.major.x = element_line(color = \"lightgray\", size = 0.5),\n        panel.grid.minor.x = element_line(color = \"gray\", linetype = \"dotted\", size = 0.25)\n        )\n\n\n\n\n\n\n\n\n\nHere we see that musicals pretty clearly earn more gross revenue, followed by plays and then specials. Specials coming in last should be no surprise, since they are typically limited time engagements at these theatres, and will often occur to fill the space between two different productions in the space. However, we also see that plays in aggregate seem to earn less than musicals, and have a greater variance in their earning trends over time. The former point again is to be expected, as fewer plays occur on Broadway compared to musicals (nearly 75% of shows on Broadway are musicals). However, this disparity does still have bearing on our question, as one would expect that this uneven distribution of the number of musicals to number of plays is not on accident, but rather a result of the profitability of the shows themselves respectively. Investors are almost always more likely to fund productions they think will make more money in the long run so as to maximize their ROI, and seeing as musicals are more often put on in Broadway, one can infer that investors fund them more often, and that they ought to have reason for doing so. So, while not concretely answered by the graph above, we can reasonably infer that Musicals make more money on Broadway compared to plays.\nWhat might give more evidence for this conclusion could be looking at ticket prices over time, separated by show type, as this can give us a better idea of how much revenue is generated on average by each individual show-goer - reducing the bias in the sample size of the different show amounts. So that is what we did:\n\n\nCode\n# Assuming 'Attendance' is the column representing the attendance for each show\nwork_broadway$Ticket.Price &lt;- work_broadway$Statistics.Gross / work_broadway$Statistics.Attendance\n\n# Group by Date.Full and Show.Type, and calculate the average ticket price for each group\nweekly_ticket_price &lt;- work_broadway |&gt;\n  group_by(Date.Full, Show.Type) |&gt;\n  summarise(Average.Ticket.Price = mean(Ticket.Price, na.rm = TRUE)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'Date.Full'. You can override using the\n`.groups` argument.\n\n\nCode\n# Create the time series plot and facet by Show.Type\nggplot(weekly_ticket_price, aes(x = Date.Full, y = Average.Ticket.Price)) +\n  geom_line(color = \"darkgreen\") +  # Line plot for average ticket price over time\n  labs(title = \"Average Ticket Price per Week\",\n       x = \"Time (Collected Weekly)\",\n       y = \"Average Ticket Price ($)\") +\n  scale_x_date(date_labels = \"%b %d, %Y\", date_breaks = \"1 year\") + # Format x-axis with readable date labels\n  scale_y_continuous(labels = scales::label_number(scale = 1, suffix = \"$\")) +  # Add dollar signs to y-axis\n  facet_wrap(~ Show.Type, scales = \"free_y\", ncol = 1) +  # Facet by Show.Type\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability\n        axis.text.y = element_text(size = 10),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        plot.title = element_text(size = 14, hjust = 0.5),\n        panel.grid.major.x = element_line(color = \"lightgray\", size = 0.5),\n        panel.grid.minor.x = element_line(color = \"gray\", linetype = \"dotted\", size = 0.25)\n        )\n\n\n\n\n\n\n\n\n\nLooking at these ticket prices, they do seem pretty comparable to one another, show type by show type, so that might not be the leading metric to choose from. Perhaps there is a difference in the number of seats for the venues that Musicals tend to occupy vs plays and/or specials that would give us better insight into the validity of our previously inferred conclusion. This is done below:\n\n\nCode\n#Calculated the average total weekly capacity of the theatres, and faceted by show type on that.\nwork_broadway$Theatre.Capacity &lt;- round(100*work_broadway$Statistics.Attendance / work_broadway$Statistics.Capacity)\n\nweekly_capacity &lt;- work_broadway |&gt;\n  group_by(Date.Full, Show.Type) |&gt;\n  summarise(Average.Capacity = mean(Theatre.Capacity, na.rm = TRUE)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'Date.Full'. You can override using the\n`.groups` argument.\n\n\nCode\n# Create the time series plot and facet by Show.Type\nggplot(weekly_capacity, aes(x = Date.Full, y = Average.Capacity)) +\n  geom_line(color = \"purple\") +  # Line plot for average capacity over time\n  labs(title = \"Average Capacity per Week, by Show Type\",\n       x = \"Time (Collected Weekly)\",\n       y = \"Average Capacity (# seats)\") +\n  scale_x_date(date_labels = \"%b %d, %Y\", date_breaks = \"1 year\") + # Format x-axis with readable date labels\n  scale_y_continuous(labels = scales::label_number(scale = 1)) +  # Show percentage on y-axis\n  facet_wrap(~ Show.Type, scales = \"free_y\", ncol = 1) +  # Facet by Show.Type\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability\n        axis.text.y = element_text(size = 10),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        plot.title = element_text(size = 14, hjust = 0.5),\n        panel.grid.major.x = element_line(color = \"lightgray\", size = 0.5),\n        panel.grid.minor.x = element_line(color = \"gray\", linetype = \"dotted\", size = 0.25)\n        )\n\n\n\n\n\n\n\n\n\nHere we do actually see some meaninful difference in the average capacity of theatres holding musicals vs plays, with musicals tending to occur in higher capacity theatres on average compared to plays. This provides further evidence of our inferred conclusion that we made earlier, that musicals are more profitable on average compared to plays, though it is again sort of a chicken-or-the-egg situation. That is, it is hard to decisively conclude if Musicals get access to these larger theatres because they are expected to generate the revenue to pay for them long term, or if they are more able to generate the revenue to pay for staying there because they have more seats they can fill in the first place by being at these larger theatres.\n\nLinear graph of Attendance vs Gross or gross potential (Cooper)\nDo the above, but faceted by show.type (Cooper)\nGross by Month and/or year (Cooper) - Test out combinations (facet by year?)\nfacet again by show.type (Cooper)\nAttendance by year and/or month (Aylmer)\n\n\n\nCode\nattendance_by_year &lt;- BroadwayData |&gt; \n  group_by(Year) |&gt; \n  summarize(total_attendance = sum(Attendance), .groups = \"drop\")\n\nggplot(attendance_by_year, aes(x = Year, y = total_attendance)) +\n  geom_col(fill = \"skyblue\") +\n  labs(title = \"Total Attendance by Year\", x = \"Year\", y = \"Total Attendance Count\")+\n  scale_y_continuous(labels = label_number(big.mark = \",\"),\n                     breaks = seq(0, max(attendance_by_year$total_attendance), by = 2500000))\n\n\n\n\n\n\n\n\n\n\n\nCode\nattendance_by_month &lt;- BroadwayData |&gt; \n  group_by(Month) |&gt; \n  summarize(avg_attendance = mean(Attendance), .groups = \"drop\")\n\nattendance_by_month$Month &lt;- month.abb[attendance_by_month$Month]\nattendance_by_month$Month &lt;- factor(attendance_by_month$Month, levels = month.abb)\n\nggplot(attendance_by_month, aes(x = Month, y = avg_attendance)) +\n  geom_col(fill = \"skyblue\") +\n  labs(title = \"Average Attendance by Month\", x = \"Month\", y = \"Average Attendance Count\")+\n  scale_y_continuous(labels = label_number(big.mark = \",\"),\n                     breaks = seq(6000, 10000, by = 500))+\n  coord_cartesian(ylim = c(7000, 9000))\n\n\n\n\n\n\n\n\n\n\nswap 3 and 4’s faceting of show type and month (i.e facet by month, plot the 3 show types) (Cooper)\nStacked bar chart attendance & capacity vs year Exclude (Aylmer)\nStacked bar chart attendance & capacity for each theatre (Aylmer)\nInteractive idea for now: 1) show some trend year by year (animation or selection tool) or 2) Put together an interactive predictor",
>>>>>>> d47d20898f1831cee7241757002b89daae5d1ccd
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive Graph",
    "section": "",
    "text": "All Theaters",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive Graph</span>"
    ]
  }
]